# Generated by Django 4.0 on 2022-05-02 12:49

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("subject", "0001_initial"),
        ("home", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tutor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("bio", models.TextField(blank=True, max_length=60, null=True)),
                ("rate_per_hour", models.PositiveSmallIntegerField(default=0)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("id_documents_provided", models.TextField(blank=True, null=True)),
                (
                    "account_no",
                    models.CharField(max_length=50, verbose_name="Account number"),
                ),
                (
                    "sort_code",
                    models.CharField(
                        max_length=70, verbose_name="Bank name / Sort code"
                    ),
                ),
                ("street", models.CharField(max_length=100)),
                ("town", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=50)),
                ("post_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "user",
                    auto_prefetch.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.customuser",
                    ),
                ),
            ],
            options={
                "ordering": ["user"],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TutorRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("full_legal_name", models.CharField(max_length=255)),
                ("date_of_birth", models.DateField()),
                ("email_address", models.EmailField(max_length=254)),
                ("whatsapp_number", models.CharField(max_length=30)),
                ("list_of_subject_you_teach", models.CharField(max_length=100)),
                ("highest_academic_qualification", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name_plural": "Tutors Request",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TutorSubject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "levels",
                    models.ManyToManyField(to="subject.InstitutionClassification"),
                ),
                (
                    "subject",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="subject.subject",
                    ),
                ),
                (
                    "tutor",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tutor.tutor",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TutorQualification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution_name", models.CharField(max_length=100)),
                (
                    "institution_type",
                    models.CharField(
                        choices=[
                            ("nursery school", "Nursery School"),
                            ("primary school", "Primary School"),
                            ("high school", "High School"),
                            ("college", "College"),
                            ("university", "University"),
                            ("online", "Online"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("course_taken", models.CharField(max_length=100)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("college_cert", "College Cert"),
                            ("certificate", "Certificate"),
                            ("diploma", "Diploma"),
                            ("degree", "Degree"),
                            ("masters", "Masters"),
                            ("phd", "PhD"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "tutor",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tutor.tutor",
                    ),
                ),
            ],
            options={
                "ordering": ["-start_date"],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TutorAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("monday", models.CharField(blank=True, max_length=20, null=True)),
                ("tuesday", models.CharField(blank=True, max_length=20, null=True)),
                ("wednesday", models.CharField(blank=True, max_length=20, null=True)),
                ("thursday", models.CharField(blank=True, max_length=20, null=True)),
                ("friday", models.CharField(blank=True, max_length=20, null=True)),
                ("saturday", models.CharField(blank=True, max_length=20, null=True)),
                ("sunday", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "tutor",
                    auto_prefetch.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="tutor.tutor"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "tutor availability",
                "ordering": ["tutor"],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
